// // 
// const express = require('express');
// const dotenv = require('dotenv');
// const cors = require('cors');
// const authRoutes = require('./routes/auth');
// const recordRoutes = require('./routes/records');
// // const sequelize = require('./db'); // <- —Ç—É—Ç –≤–∂–µ Sequelize
// const { sequelize, User } = require('./models'); // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –º–æ–¥–µ–ª—å, —â–æ–± –∑–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏ —ó—ó –≤ Sequelize

// dotenv.config();

// const app = express();
// const PORT = process.env.PORT || 5000;

// app.use(cors());
// app.use(express.json());

// app.use('/api/auth', authRoutes);
// app.use('/api/records', recordRoutes);

// // –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –ë–î —Ç–∞ –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
// sequelize.authenticate()
//   .then(() => {
//     console.log('‚úÖ –ü—ñ–¥–∫–ª—é—á–µ–Ω–æ –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö');

//     // –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É—î–º–æ –≤—Å—ñ –º–æ–¥–µ–ª—ñ –∑ –ë–î
//     return sequelize.sync(); // { force: true } –∞–±–æ { alter: true } –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—å
//   })
//   .then(() => {
//     app.listen(PORT, () => {
//       console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
//     });
//   })
//   .catch((err) => {
//     console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö:', err);
//     process.exit(1);
//   });

  



// const express = require('express');
// const dotenv = require('dotenv');
// const cors = require('cors');
// const authRoutes = require('./routes/auth');
// const sequelize = require('./db');
// const User = require('./models/user');

// dotenv.config();

// const app = express();
// const PORT = process.env.PORT || 5000;

// app.use(cors());
// app.use(express.json());

// app.use('/api/auth', authRoutes);

// sequelize.authenticate()
//   .then(() => {
//     console.log('‚úÖ –ü—ñ–¥–∫–ª—é—á–µ–Ω–æ –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö');
//     return sequelize.sync();
//   })
//   .then(() => {
//     app.listen(PORT, () => {
//       console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
//     });
//   })
//   .catch((err) => {
//     console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö:', err);
//     process.exit(1);
//   });
const express = require('express');
const { sequelize } = require('./models');
const authRoutes = require('./routes/auth');
const recordsRoutes = require('./routes/records');
const app = express();
const cors = require('cors');

app.use(cors());

// Middleware –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥—É JSON
app.use(express.json());

// –†–æ—É—Ç–∏
app.use('/api/auth', authRoutes);
app.use('/api/records', recordsRoutes);

// –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
sequelize.sync()
  .then(() => {
    console.log('‚úÖ –ü—ñ–¥–∫–ª—é—á–µ–Ω–æ –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö');
    app.listen(5000, () => {
      console.log('üöÄ –°–µ—Ä–≤–µ—Ä –ø—Ä–∞—Ü—é—î –Ω–∞ –ø–æ—Ä—Ç—É 5000');
    });
  })
  .catch((error) => {
    console.error('‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –ø—ñ–¥–∫–ª—é—á–∏—Ç–∏—Å—è –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö:', error);
  });
